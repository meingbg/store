#!/bin/bash

function list-dir {
init-repo
cat "$repo"/list|grep -E "$1"
}

function init-repo {
mkdir -p "$repo"
touch "$repo"/list
}

function save-dir {
init-repo
statfile="`tempfile -d "$repo"`"
dirname="`basename "$1"`"
dirhash="`dir-to-repo "$1" 2>"$statfile"`"
date="`date +%Y%m%d%H%M`"
commithash="`(echo d$date;echo c$dirhash;create-commit-stat "$statfile"|sed -r 's/^/s/')|content-to-hash 2>/dev/null`"
saveline="${dirname}_${date}_$commithash"
if [ "`grep -Fc "$saveline" "$repo"/list`" -eq "0" ]
then echo "$saveline" >> "$repo"/list
fi
rm "$statfile"
get-commit-stat "$saveline"
exit
}

function get-commit-stat {
init-repo
commit="`select-commit "$1"`"
if [ "${commit}" == "" ]; then exit; fi
commithash="`echo "$commit"|sed -r 's/^.*_([^_]*)$/\1/'`"
echo "Snapshot name: $commit"
hash-to-content "$commithash"|sed -r 's/^d/Date saved: /;s/^c/Directory hash: /;s/^s//'
}

function intsum {
cat|sed -r 's/^[^0-9]*([0-9]+)[^0-9]*$/\1+/'|(echo 0;cat;echo p)|dc
}

function create-commit-stat {
echo "Bytes: `cat "$1"|grep -F -- --bytes-a|intsum`"
echo "Files: `cat "$1"|grep -F -- --files|intsum`"
echo "Directories: `cat "$1"|grep -F -- --directories|intsum`"
echo "Symlinks: `cat "$1"|grep -F -- --symlinks|intsum`"
echo "Nodes: `cat "$1"|grep -F -- --nodes|intsum`"
echo "Bytes after deduplication: `cat "$1"|grep -F -- --bytes-d|intsum`"
echo "Bytes after compression: `cat "$1"|grep -F -- --bytes-c|intsum`"
}

function dir-to-repo {
(
dn="`dir-wo-slash "$1"`"
echo n"`basename "$dn"`"
settings-from-dir "$dn"|sed -r 's/^/s/'
dir-content-to-repo "$dn"|sed -r 's/^/c/'
echo --directories 1 >&2;
)|content-to-hash
}

function dir-content-to-repo {
ls -1A "$1"|
(while IFS="" read a; do
if [ -d "$1"/"$a" ]; then echo d"`dir-to-repo "$1"/"$a"`"; fi
if [ -f "$1"/"$a" ]; then echo f"`file-to-repo "$1"/"$a"`"; fi
if [ -h "$1"/"$a" ]; then echo l"`symlink-to-repo "$1"/"$a"`"; fi
done
)|sort
}

function dir-wo-slash {
echo "$1"|sed -r 's/\/$//'
}

function file-size {
ls -ld "$1"|sed -r 's/^[^ ]+\ +[0-9]+\ +[^ ]+\ +[^ ]+\ +([0-9]+)\ .*$/\1/'
}

function content-to-hash {
tf="`tempfile -d "$repo"`"; tfgz="`tempfile -d "$repo"`"
cat > "$tf"
h="`sha1sum "$tf"`"
h1="`echo "$h"|sed -r 's/^(..).*$/\1/'`"
h2="`echo "$h"|sed -r 's/^..([^ ]*).*$/\1/'`"
if [ -f "$repo"/$h1/$h2 -o -f "$repo"/$h1/$h2.gz ];
then rm "$tf"; rm "$tfgz"
else mkdir -p "$repo"/$h1
cat "$tf"|gzip>"$tfgz"
echo --nodes 1 >&2
echo --bytes-d "`file-size "$tf"`" >&2
if [ "`file-size "$tfgz"`" -lt "`file-size "$tf"`" ]
then echo --bytes-c "`file-size "$tfgz"`" >&2; mv "$tfgz" "$repo"/$h1/$h2.gz;rm "$tf"
else echo --bytes-c "`file-size "$tf"`" >&2; mv "$tf" "$repo"/$h1/$h2;rm "$tfgz"
fi
fi
echo "$h1$h2"
}

function file-to-repo {
(
echo n"`basename "$1"`"
settings-from-file "$1"|sed -r 's/^/s/'
h="`sha1sum "$1"`"
h1="`echo "$h"|sed -r 's/^(..).*$/\1/'`"
h2="`echo "$h"|sed -r 's/^..([^ ]*).*$/\1/'`"
echo --files 1 >&2;
echo --bytes-a "`file-size "$1"`" >&2; 
if [ -f "$repo"/$h1$h2 -o -f "$repo"/$h1$h2.gz ]; then echo c$h1$h2; else echo c"`cat "$1"|content-to-hash`"; fi
)|content-to-hash
}

function symlink-to-repo {
(
echo n"`basename "$1"`"
echo l"`readlink "$1"`"
echo --symlinks 1 >&2;
echo --bytes-a "`file-size "$1"`" >&2; 
)|content-to-hash
}

function select-commit {
if [ "`cat "$repo"/list|grep -Fc "$1"`" -gt "1" ];
then echo "More than one snapshot matches:" >&2
cat "$repo"/list|grep -F "$1" 1>&2
exit
fi
if [ "`cat "$repo"/list|grep -Fc "$1"`" -eq "0" ];
then echo "No directory matches." >&2
exit
fi
cat "$repo"/list|grep -F "$1"
}

function load-dir {
init-repo
commithash="`select-commit "$1"|sed -r 's/^.*_([^_]*)$/\1/'`"
if [ "${commithash}" == "" ]; then exit; fi
dirhash="`hash-to-content "$commithash"|grep -E '^c'|sed -r 's/^.//'`"
dir-from-repo "$dirhash" "`dir-wo-slash "$2"`"
}

function dir-from-repo {
tf="`hash-to-content "$1"`"
name="`echo "$tf"|grep -E '^n'|sed -r 's/^.//'`"
ndir="$2"/"$name"
mkdir "$ndir"
echo "$tf"|grep -E '^c'|sed -r 's/^.//'| dir-content-from-repo "$ndir"
echo "$tf"|grep -E '^s'|sed -r 's/^.//'| settings-to-dir "$ndir"
}

function dir-content-from-repo {
while IFS="" read a; do
class="`echo "$a"|sed -r 's/^(.).*$/\1/'`"
hash="`echo "$a"|sed -r 's/^.//'`"
if [ "$class" == "d" ]; then dir-from-repo "$hash" "$1"; fi
if [ "$class" == "f" ]; then file-from-repo "$hash" "$1"; fi
if [ "$class" == "l" ]; then symlink-from-repo "$hash" "$1"; fi
done
}

function hash-to-content {
h1="`echo "$1"|sed -r 's/^(..).*$/\1/'`"
h2="`echo "$1"|sed -r 's/^..([^ ]*).*$/\1/'`"
if [ -f "$repo"/$h1/$h2.gz ]
then cat "$repo"/$h1/$h2.gz|gunzip
else
if [ -f "$repo"/$h1/$h2 ]
then cat "$repo"/$h1/$h2
fi
fi
}

function file-from-repo {
tf="`hash-to-content "$1"`"
name="`echo "$tf"|grep -E '^n'|sed -r 's/^.//'`"
nfile="$2"/"$name"
hash-to-content "`echo "$tf"|grep -E '^c'|sed -r 's/^.//'`" > "$nfile"
echo "$tf"|grep -E '^s'|sed -r 's/^.//'| settings-to-file "$nfile"
}

function symlink-from-repo {
name="`hash-to-content "$1"|grep -E '^n'|sed -r 's/^.//'`"
link="`hash-to-content "$1"|grep -E '^l'|sed -r 's/^.//'`"
ln -s "$link" "$2"/"$name"
}

function settings-from-dir {
settings-from-file "$1"
}

function settings-to-dir {
settings-to-file "$1"
}

function settings-from-file {
lsld="`ls -ld --full-time "$1"`"
echo p"`echo "$lsld"|sed -r 's/^.(.........).*$/\1/'`"
echo o"`echo "$lsld"|sed -r 's/^[^ ]+\ +[0-9]+\ +([^ ]+).*$/\1/'`"
echo g"`echo "$lsld"|sed -r 's/^[^ ]+\ +[0-9]+\ +[^ ]+\ +([^ ]+).*$/\1/'`"
echo m"`echo "$lsld"|sed -r 's/^[^ ]+\ +[0-9]+\ +[^ ]+\ +[^ ]+\ +[0-9]+\ +([0-9-]+\ [0-9:.]+\ [0-9+-]+).*$/\1/'`"
echo a"`ls -ldu --full-time "$1"|sed -r 's/^[^ ]+\ +[0-9]+\ +[^ ]+\ +[^ ]+\ +[0-9]+\ +([0-9-]+\ [0-9:.]+\ [0-9+-]+).*$/\1/'`"
}

function settings-to-file {
while IFS="" read a; do
attribute="`echo "$a"|sed -r 's/^(.).*$/\1/'`"
value="`echo "$a"|sed -r 's/^.//'`"
if [ "$attribute" == "p" ]; then perm-to-file "$value" "$1"; fi
if [ "$attribute" == "o" ]; then chown "$value" "$1"; fi
if [ "$attribute" == "g" ]; then chgrp "$value" "$1"; fi
if [ "$attribute" == "m" ]; then touch -md "$value" "$1"; fi
if [ "$attribute" == "a" ]; then touch -ad "$value" "$1"; fi
done
}

function perm-to-file {
chmod "`echo "$1"|sed -r 's/--x/1/g;s/-w-/2/g;s/-wx/3/g;s/r--/4/g;s/r-x/5/g;s/rw-/6/g;s/rwx/7/g;s/---/0/g;'`" "$2"
}

function usagehelp {
echo ""
echo Usage:
c="`if [ ! "$(whoami)" == "root" ]; then echo "sudo "; fi`""$0"
echo "$c" "save dir [repo] -- save a snapshot of directory dir"
echo "$c" "load snap todir [repo] -- extract snapshot snap to directory todir"
echo "$c" "list [pattern] [repo] -- list the snapshots matching pattern"
echo "$c" "stat snap [repo] -- show information about snapshot snap"
echo "$c" "-- see this help"
echo ""
echo "repo is the path to the repository to operate on."
echo "repo defaults to [current working directory]/repo"
echo ""
}

if [ ! "`whoami`" == "root" ]; then usagehelp; exit; fi

if [ "$1" == "save" ];
then dir="$2"; repo="$3"
if [ "$repo" == "" ]; then repo="repo"; fi
if [ ! -d "$dir" ]; then echo "Directory does not exist"; exit; fi
save-dir "$dir"
exit
fi

if [ "$1" == "list" ];
then pattern="$2" repo="$3"
if [ "$repo" == "" ]; then repo="repo"; fi
list-dir "$pattern"
exit
fi

if [ "$1" == "load" ];
then dir="$2"; todir="$3"; repo="$4"
if [ "$repo" == "" ]; then repo="repo"; fi
if [ ! -d "$todir" ]; then echo "Target directory does not exist"; exit; fi
load-dir "$dir" "$todir"
exit
fi

if [ "$1" == "stat" ];
then commit="$2"; repo="$3"
if [ "$repo" == "" ]; then repo="repo"; fi
get-commit-stat "$commit"
exit
fi

usagehelp
